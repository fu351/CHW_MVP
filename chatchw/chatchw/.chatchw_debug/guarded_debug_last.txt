SYSTEM:
You extract structured decision rules from a technical manual. Return ONLY JSON.

IMPORTANT OUTPUT POLICY
- Preserve original clinical or medical terms EXACTLY as written in the source text wherever they appear.
- Any examples below are generic; do NOT copy their wording.
- No prose outside the JSON object.

SCHEMA
{
  "variables":[{"name":snake,"type":"number|boolean|string","unit":null|unit,"allowed":null|[...] ,                "synonyms":[snake...],"prompt":short,"refs":[page_or_section]}],
  "rules":[{"rule_id":str,
            "when":[ {"obs":var,"op":"lt|le|gt|ge|eq|ne","value":num|bool|string} |
                     {"sym":var,"eq":true|false} |
                     {"all_of":[COND...]} | {"any_of":[COND...]} ],
            "then":{"triage":"hospital|clinic|home",
                    "flags":[snake...],
                    "reasons":[snake...],
                    "actions":[{"id":snake,"if_available":bool}],
                    "advice":[],
                    "guideline_ref":str,"priority":int}}],
  "canonical_map":{},
  "qa":{"notes":[]}
}

RULES
- Use canonical names if present: symptom1, symptom1_duration_days, symptom2, symptom2_duration_days, sign1_present, sign2_present, sign3_present, measurement1_rate, measurement2_temp_c, measurement3_mm, age_months, area1_flag (examples; prefer the source's medical terms).
- Do NOT invent thresholds; encode only literal thresholds.
- No derived outputs in conditions (ban keys: danger_sign, clinic_referral, triage).
- Every rule gets guideline_ref like "p41" or a section id.
OUTPUT: only JSON for THIS section.

USER (len=2471):
SECTION_ID: p17-18

TEXT:
[PAGE 17]
TIP: If you are unsure whether the child can drink, ask the caregiver to offer a
[PAGE 17]
drink to the child.
[PAGE 17]
For a child who is breastfed, see if the child can breastfeed or take breast milk from a cup.
[PAGE 18]
Participant Manual: Caring for the sick child in the community 16
[PAGE 18]

[PAGE 18]
 Vomiting
[PAGE 18]
If the child is vomiting, ask: “Is the child vomiting everything?” A child who is not able to hold
[PAGE 18]
anything down at all has the sign “vomits everything”. Ask the caregiver how often t he child
[PAGE 18]
vomits. Is it every time the child swallows food or fluids, or only some times? A child who
[PAGE 18]
vomits several times but can hold down some fluids does not “vomit everything”. The child
[PAGE 18]
who vomits everything will not be able to use the oral medicine you have in your medicine kit.
[PAGE 18]
 Any other problem
[PAGE 18]
There is a small space on the back of the recording form, item 5, to write any other problem to
[PAGE 18]
refer because you cannot treat it. For example, a child may have a problem in breastfeeding,
[PAGE 18]
a skin or eye infection, or a burn or other injury.
[PAGE 18]
On the other hand, some other problems you may be able to treat. For example, you may
[PAGE 18]
have learned how to advise caregivers on how to feed their children. If the caregiver might
[PAGE 18]
have a question about feeding the child, you would be able to help overcome a feeding
[PAGE 18]
problem. The child may not need to be referred.
[PAGE 18]
Record the child’s problems
[PAGE 18]
As the caregiver lists the problems, listen carefully and record them on the Sick Child
[PAGE 18]
Recording Form. The caregiver may mention more than one problem. For example, the child
[PAGE 18]
may have cough and fever.
[PAGE 18]
If the caregiver reports any of the listed problems, tick [] the small empty box  next to the
[PAGE 18]
problem.
[PAGE 18]
Some items ask you to add brief answers. For example, write how many days the child has
[PAGE 18]
been sick.
[PAGE 18]
Ask about all the problems on the list, even if the caregiver does not mention them. Perhaps
[PAGE 18]
the caregiver is only worried about one problem. If you ask, however, the caregiver may tell
[PAGE 18]
you about other problems. Record (tick or write) any problems you find.
[PAGE 18]
If the caregiver says the child does NOT have a problem, circle the solid box  next to
[PAGE 18]
the listed problem, i.e.  .


ERR:6 validation errors for IR
variables.0.allowed.0
  Input should be a valid string [type=string_type, input_value=True, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
variables.0.allowed.1
  Input should be a valid string [type=string_type, input_value=False, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
variables.1.allowed.0
  Input should be a valid string [type=string_type, input_value=True, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
variables.1.allowed.1
  Input should be a valid string [type=string_type, input_value=False, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
variables.3.allowed.0
  Input should be a valid string [type=string_type, input_value=True, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
variables.3.allowed.1
  Input should be a valid string [type=string_type, input_value=False, input_type=bool]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type